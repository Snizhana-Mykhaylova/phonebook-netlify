{"version":3,"file":"static/js/UpdateView.2b16de3a.chunk.js","mappings":"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","sources":["redux/phonebook-operations.tsx","redux/phonebook-selectors.tsx","components/UpdateFrom.tsx","views/UpdateView.tsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://test-bakend-json-server.herokuapp.com';\r\n\r\ninterface Contact {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n  img?: string;\r\n}\r\n\r\ninterface IParams {\r\n  id: string;\r\n  body: object;\r\n}\r\n\r\ntype getStateFn = () => any;\r\n\r\nconst addContact = (name: string, phone: string) => (\r\n  dispatch: Dispatch,\r\n  getState: getStateFn\r\n) => {\r\n  const contact = { name, phone };\r\n  dispatch(addContactRequest());\r\n  const state = getState();\r\n  const contacts = state.phonebook.contacts;\r\n  const normalizedName = name.toLowerCase();\r\n  if (\r\n    contacts.find(\r\n      (contact: Contact) => contact.name.toLowerCase() === normalizedName\r\n    )\r\n  ) {\r\n    alert(`${name} is already in contacts`);\r\n    dispatch(fetchContactSuccess({}));\r\n    return;\r\n  }\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((err) => dispatch(addContactError(err.message)));\r\n};\r\n\r\nconst deleteContact = (id: string) => (dispatch: Dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((err) => dispatch(deleteContactError(err.message)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch: Dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((err) => dispatch(fetchContactError(err.message)));\r\n};\r\n\r\nconst updateContact = ({ id, body }: IParams) => (dispatch: Dispatch) => {\r\n  console.log(id);\r\n  console.log(body);\r\n  dispatch(updateContactRequest());\r\n  axios\r\n    .patch(`/contacts/${id}`, body)\r\n    .then(({ data }) => dispatch(updateContactSuccess(data)))\r\n    .catch((error) => dispatch(updateContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContact,\r\n  updateContact\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\ninterface Contact {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n  img?: string;\r\n}\r\n\r\ninterface IState {\r\n  phonebook: {\r\n    contacts: Contact[];\r\n    filter: string;\r\n    loading: boolean;\r\n    error: boolean;\r\n    alert: boolean;\r\n  };\r\n}\r\n\r\nexport const getLoading = (state: IState) => state.phonebook.loading;\r\nexport const getAlert = (state: IState) => state.phonebook.alert;\r\nexport const getError = (state: IState) => state.phonebook.error;\r\nexport const getFilter = (state: IState) => state.phonebook.filter;\r\nexport const getContacts = (state: IState) => state.phonebook.contacts;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    if (filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    }\r\n    return contacts;\r\n  }\r\n);\r\n","import {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  UncontrolledAlert,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../redux/phonebook-selectors';\r\nimport operations from '../redux/phonebook-operations';\r\nimport noUser from '../utils/noUser.png';\r\n\r\ntype Contact = { id: string; name: string; phone: string; img?: string };\r\n\r\nconst UpdateForm = () => {\r\n  const contacts: Contact[] = useSelector(selectors.getContacts);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectors.getLoading);\r\n  const { id } = useParams();\r\n  const [contact] = contacts.filter((contact) => contact.id == id);\r\n\r\n  const [phone, setPhone] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [img, setImg] = useState(noUser);\r\n\r\n  const isAlert = useSelector(selectors.getAlert);\r\n\r\n  const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setName(e.target.value);\r\n  const handleChangePhone = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setPhone(e.target.value);\r\n\r\n  useEffect(() => {\r\n    setPhone(contact ? contact.phone : '');\r\n    setName(contact ? contact.name : '');\r\n  }, [contact]);\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const body = { name, phone };\r\n    const id = contact.id;\r\n    dispatch(operations.updateContact({ id, body }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='title-section'>\r\n        <Button className='button-goback' color='light'>\r\n          <NavLink to='/contacts'>\r\n            <ArrowBackIcon />\r\n          </NavLink>\r\n        </Button>\r\n        <img className='user-photo_update' src={img} alt={name} />\r\n        <h3 className='user-name'>{name}</h3>\r\n      </div>\r\n      <Form inline onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label hidden>name</Label>\r\n          <Input\r\n            value={name}\r\n            type='text'\r\n            name='name'\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChangeName}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='phone' hidden>\r\n            setPhone\r\n          </Label>\r\n          <Input\r\n            className='form-last-input'\r\n            value={phone}\r\n            type='tel'\r\n            name='phone'\r\n            required\r\n            onChange={handleChangePhone}\r\n          />\r\n          {isLoading && <Spinner color='primary'>Loading...</Spinner>}\r\n        </FormGroup>\r\n        {isAlert && (\r\n          <UncontrolledAlert color='success'>\r\n            {name} was successfuly updated\r\n          </UncontrolledAlert>\r\n        )}\r\n        <Button type='submit' variant='contained' color='primary'>\r\n          Edit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport operations from '../redux/phonebook-operations';\r\n\r\nimport UpdateForm from '../components/UpdateFrom';\r\n\r\nconst UpdateView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return <UpdateForm />;\r\n};\r\n\r\nexport default UpdateView;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;"],"names":["axios","addContact","name","phone","dispatch","getState","contact","addContactRequest","contacts","phonebook","normalizedName","toLowerCase","find","alert","fetchContactSuccess","then","data","addContactSuccess","catch","err","addContactError","message","deleteContact","id","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContact","fetchContactRequest","fetchContactError","updateContact","body","console","log","updateContactRequest","updateContactSuccess","error","updateContactError","getLoading","state","loading","getAlert","getError","getFilter","filter","getContacts","getFilteredContacts","createSelector","normalizedFilter","includes","useSelector","selectors","useDispatch","isLoading","useParams","useState","setPhone","setName","noUser","img","isAlert","useEffect","className","color","to","ArrowBack","src","alt","inline","onSubmit","e","preventDefault","operations","hidden","value","type","pattern","title","required","onChange","target","for","variant","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}